{"version":3,"sources":["components/WeatherForecasItem/WeatherForecasItem.js","components/WeatherItem/WeatherItem.js","components/WeatherList/WeatherList.js","components/WeatherForm/WeatherForm.js","components/LeafMap/LeafMap.js","components/Main/Main.js","index.js","components/App/App.js"],"names":["WeatherForecasItem","props","mainWeatherClassName","mainWeather","toLowerCase","react_default","a","createElement","className","concat","data-index","data_attr","date","temp","WeatherItem","name","descriptionWeather","pressure","humidity","onClick","e","onWeatherForecastClick","isWeatherForecastOpened","weatherForecast","map","el","index","WeatherForecasItem_WeatherForecasItem","key","WeatherList","_useContext","useContext","MyWeatherContext","weather","WeatherItem_WeatherItem","cityName","WeatherForm","onChange","onWeatherInputChange","type","placeholder","onWeatherBtnClick","value","LeafMap","Map","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","getMapPosition","TileLayer","url","React","createContext","weather_api_key","Main","_useState","useState","_useState2","Object","slicedToArray","city","setCity","_useState3","_useState4","setWeather","_useState5","_useState6","status","setStatus","_useState7","_useState8","mapCoordinates","setMapCoordinates","_useState9","_useState10","useEffect","getWeatherByCoordinates","parse","data_weather","parsed_weather_forecast","cod","newWeather","slice","id","forEach","item","idx","splice","unshift","main","description","parseForecast","data_weatheForecast","newWeatherForecast","list","forecast","push","dt_txt","getWeatherByCity","_ref","asyncToGenerator","regenerator_default","mark","_callee","api_url","api_url_forecast","data_weather_forecast","parsed_weather","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","_ref2","_callee2","coord","_context2","console","log","_x2","getMapCoordinates","_e$latlng","latlng","lat","lng","context","currentTarget","dataset","Provider","LeafMap_LeafMap","WeatherForm_WeatherForm","target","WeatherList_WeatherList","ReactDOM","render","react_router_dom","react_router","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.0d4c9cac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./WeatherForecasItem.css\";\r\n\r\nexport default function WeatherForecasItem(props) {\r\n  let mainWeatherClassName = props.mainWeather.toLowerCase();\r\n\r\n  return (\r\n    <div\r\n      className={`weather_forecast_item col-1 ${mainWeatherClassName}`}\r\n      data-index={props.data_attr}\r\n    >\r\n      <div className=\"weather_forecast_item_wrap\">\r\n        <div className=\"weather_forecast_date\">{/* Погода на */} {props.date}</div>\r\n        <div className=\"weather_forecast_temp\">{/* Температура: */} {props.temp} </div>\r\n        <div className=\"weather_forecast_pressure\">\r\n          {/*  Давление: {props.pressure}{\" \"} */}\r\n        </div>\r\n        <div className=\"weather_forecast_humidity\">\r\n          {/* Влажность: {props.humidity} %{\" \"} */}\r\n        </div>\r\n        <div className=\"weather_forecast_main\">\r\n          {props.mainWeather}\r\n        </div>\r\n        <div className=\"weather_icon\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WeatherForecasItem from \"../WeatherForecasItem/WeatherForecasItem\";\r\n\r\n\r\nimport \"./WeatherItem.css\";\r\n\r\nexport default function WeatherItem(props) {\r\n  let mainWeatherClassName = props.mainWeather.toLowerCase();\r\n  const city = props.name;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row border-t-none\">\r\n        <div\r\n          className={`weather_item col col-2 ${mainWeatherClassName}`}\r\n          data-index={props.data_attr}\r\n        >\r\n          <div className=\"weather_item_wrap\">\r\n            <div className=\"row border-none\">\r\n              <div className=\"col-2 weather_main\">\r\n                <div className=\"row border-none\">\r\n                  <div className=\"col-2 border-none weather_city\"> {props.name} </div>\r\n                  <div className=\"col-2 border-none weather_temp\">{props.temp} </div>\r\n                </div>\r\n                <div className=\"row border-none weather_description_icon\">\r\n                  <div className=\"col-2 border-none weather_description\">\r\n                    {props.descriptionWeather}\r\n                  </div>            \r\n                  <div className=\"col-2 border-none main_weather_icon\">         \r\n                      <div className=\"weather_icon weather_item_icon\"></div>                                   \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-2 border-r-none weather_secondary_info\">\r\n                <div className=\"weather_pressure\">\r\n                  Давление: {props.pressure}{\" \"}\r\n                </div>\r\n                <div className=\"weather_humidity\">\r\n                  Влажность: {props.humidity} %{\" \"}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather_link_forecast col col-2 \">\r\n          <div className=\"weather_link_forecast_wrapper\">\r\n            <div className=\"link_more\" data-index={props.data_attr} onClick={(e) => props.onWeatherForecastClick(e)}>узнать прогноз</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {props.isWeatherForecastOpened && (\r\n        <div className=\"weather_forecast\">\r\n          <div className=\"weather_forecast_list\">\r\n            {props.weatherForecast.map((el, index) => (\r\n              <WeatherForecasItem\r\n                temp={el.temp}\r\n                pressure={el.pressure}\r\n                key={index}\r\n                data_attr={index}\r\n                humidity={el.humidity}\r\n                date={el.date}\r\n                mainWeather={el.mainWeather}\r\n                descriptionWeather={el.descriptionWeather}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState  } from \"react\";\r\nimport WeatherItem from \"../WeatherItem/WeatherItem\";\r\n\r\nimport { MyWeatherContext } from \"../Main/Main\";\r\nimport \"./WeatherList.css\";\r\n\r\nexport default function WeatherList() {\r\n  const { weather,onWeatherForecastClick} = useContext(MyWeatherContext);\r\n  \r\n\r\n  return (\r\n    <div className=\"weather_list\">\r\n      <div className=\"row weather_list_title\">\r\n        <div className=\"col col-1 weather_list_title_item\">\r\n          Погода\r\n      </div>\r\n        <div className=\"col col-1 weather_list_title_item\">\r\n          Дополнительная информация\r\n      </div>\r\n        <div className=\"col-2 border-r-none\" />\r\n      </div>\r\n      {weather.map((el, index) => (\r\n        <WeatherItem\r\n          name={el.cityName}\r\n          temp={el.temp}\r\n          pressure={el.pressure}\r\n          key={index}\r\n          data_attr={index}\r\n          humidity={el.humidity}\r\n          mainWeather={el.mainWeather}\r\n          descriptionWeather={el.descriptionWeather}\r\n          weatherForecast={el.weatherForecast}\r\n          onWeatherForecastClick={(e)=> onWeatherForecastClick(e)}\r\n          isWeatherForecastOpened={el.isWeatherForecastOpened}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./WeatherForm.css\";\r\nexport default function WeatherForm(props) {\r\n  return (\r\n    <div className=\"row form_city_weather\">\r\n      <div className=\"col col-1 input_city\">\r\n        <div className=\"input_city_wrapper\">\r\n          <input\r\n            className=\"input input_text\"\r\n            onChange={props.onWeatherInputChange}\r\n            type=\"text\"\r\n            placeholder=\"введите город\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col col-1 input_submit_city\">\r\n        <div className=\"input_submit_city_wrapper\">\r\n          <input\r\n            className=\"input input_submit\"\r\n            onClick={props.onWeatherBtnClick}\r\n            value=\"узнать погоду\"\r\n            type=\"submit\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-2 border-r-none\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./LeafMap.css\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\n\r\nexport default function LeafMap(props) {\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"map_weather\">\r\n        <Map\r\n          center={[55.75222, 37.61556]}\r\n          zoom={6}\r\n          maxZoom={17}\r\n          attributionControl={true}\r\n          zoomControl={true}\r\n          doubleClickZoom={true}\r\n          scrollWheelZoom={true}\r\n          dragging={true}\r\n          animate={true}\r\n          easeLinearity={0.35}\r\n          onClick={props.getMapPosition}\r\n        >\r\n          >\r\n        <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\" />\r\n        </Map>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport WeatherList from \"../WeatherList/WeatherList\";\r\nimport WeatherForm from \"../WeatherForm/WeatherForm\";\r\n\r\nimport LeafMap from \"../LeafMap/LeafMap\";\r\n\r\nexport const MyWeatherContext = React.createContext();\r\n\r\nconst weather_api_key = \"e2bc6a595e6ee4928ed91c3778b2b446\";\r\n\r\nexport default function Main() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weather, setWeather] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [mapCoordinates, setMapCoordinates] = useState([]);\r\n  const [isWeatherForecastOpened, setWeatherForecastOpened] = useState(false)\r\n\r\n\r\n  const weatherForecastOpen = (e) => {\r\n    const newWeather = weather.slice();\r\n    const index = e.currentTarget.dataset.index;\r\n    newWeather[index].isWeatherForecastOpened = true;\r\n\r\n    return setWeather(newWeather)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    mapCoordinates[0] &&\r\n      mapCoordinates[1] &&\r\n      getWeatherByCoordinates(mapCoordinates);\r\n  }, [mapCoordinates]);\r\n\r\n  /*Главный парсер погоды принимает 2 объекта: основную погоду и прогноз погоды на 5 дней */\r\n\r\n  const parse = (data_weather, parsed_weather_forecast) => {\r\n\r\n    /*устанавливает код(ошибки или успеха) */\r\n    setStatus(data_weather.cod);\r\n\r\n    const newWeather = weather.slice();\r\n\r\n    if (data_weather.cod === 200) {\r\n      let cityIdArr = newWeather.map(function (el) {\r\n        return el.id;\r\n      });\r\n      cityIdArr.forEach((item, idx) => {\r\n        if (item === data_weather.id) {\r\n          newWeather.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      newWeather.unshift({\r\n        id: data_weather.id,\r\n        cityName: data_weather.name,\r\n        temp: data_weather.main.temp,\r\n        pressure: data_weather.main.pressure,\r\n        humidity: data_weather.main.humidity,\r\n        mainWeather: data_weather.weather[0].main,\r\n        descriptionWeather: data_weather.weather[0].description,\r\n        weatherForecast: parsed_weather_forecast,\r\n        isWeatherForecastOpened: isWeatherForecastOpened\r\n      });\r\n    }\r\n    return newWeather;\r\n  };\r\n\r\n  const parseForecast = data_weatheForecast => {\r\n    const newWeatherForecast = [];\r\n    if (data_weatheForecast.cod === \"200\") {\r\n      data_weatheForecast.list.map(forecast => {\r\n        newWeatherForecast.push({\r\n          temp: forecast.main.temp,\r\n          pressure: forecast.main.pressure,\r\n          humidity: forecast.main.humidity,\r\n          date: forecast.dt_txt,\r\n          mainWeather: forecast.weather[0].main,\r\n          descriptionWeather: forecast.weather[0].description,\r\n          isWeatherForecastOpened: false\r\n        });\r\n      });\r\n    }\r\n    return newWeatherForecast\r\n  };\r\n\r\n\r\n  const getWeatherByCity = async city => {\r\n\r\n    const api_url = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weather_api_key}&lang=ru&units=metric`\r\n    );\r\n    const data_weather = await api_url.json();\r\n\r\n    const api_url_forecast = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${weather_api_key}&lang=ru&units=metric`\r\n    );\r\n\r\n    const data_weather_forecast = await api_url_forecast.json();\r\n\r\n    const parsed_weather_forecast = parseForecast(data_weather_forecast)\r\n    const parsed_weather = parse(data_weather, parsed_weather_forecast);\r\n\r\n    return setWeather(parsed_weather)\r\n  };\r\n\r\n\r\n  const getWeatherByCoordinates = async coord => {\r\n\r\n    const api_url = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${coord[0]}&lon=${\r\n      coord[1]\r\n      }&appid=${weather_api_key}&units=metric&lang=ru`\r\n    );\r\n    const data_weather = await api_url.json();\r\n      console.log(data_weather)\r\n    const api_url_forecast = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${coord[0]}&lon=${\r\n      coord[1]\r\n      }&appid=${weather_api_key}&lang=ru&units=metric`\r\n    );\r\n    const data_weather_forecast = await api_url_forecast.json();\r\n\r\n    const parsed_weather_forecast = parseForecast(data_weather_forecast)\r\n    const parsed_weather = parse(data_weather, parsed_weather_forecast);\r\n\r\n    return setWeather(parsed_weather);\r\n  };\r\n\r\n  const getMapCoordinates = e => {\r\n    const { lat, lng } = e.latlng;\r\n    return setMapCoordinates([lat, lng]);\r\n  };\r\n\r\n\r\n\r\n  const context = {\r\n    weather: weather,\r\n    parse: parse,\r\n    getWeatherByCity: getWeatherByCity,\r\n    getMapCoordinates: getMapCoordinates,\r\n    onWeatherForecastClick: weatherForecastOpen,\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <MyWeatherContext.Provider value={context}>\r\n        <section className=\"row\">\r\n          <div className=\"col col-3\">\r\n            <LeafMap getMapPosition={e => getMapCoordinates(e)} />\r\n          </div>\r\n          <div className=\"col col-1 col-border-r-none\">\r\n            <p>Карта</p>\r\n          </div>\r\n        </section>\r\n\r\n        <WeatherForm\r\n          onWeatherInputChange={e => {\r\n            setCity(e.target.value);\r\n          }}\r\n          onWeatherBtnClick={() => getWeatherByCity(city)}\r\n        />\r\n        <div className=\"status\">\r\n          {status === \"404\"\r\n            ? \"Ошибка, такого города не существует, введите сущетсвующий город или найдите его на карте\"\r\n            : \"\"}\r\n        </div>\r\n        <WeatherList />\r\n      </MyWeatherContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\n\r\nimport Main from \"../Main/Main\";\r\n\r\nimport { BrowserRouter as HashRouter, Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"mainPage\">\r\n        <Switch>\r\n          <Route path=\"/\" component={Main} />\r\n         \r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"sourceRoot":""}